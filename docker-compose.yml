version: '3.9'

services:
  nginx:
    build:
      context: ./dashboard/docker/development
      dockerfile: nginx/nginx.docker
    volumes:
      - ./dashboard:/app:ro
    depends_on:
      - php-fpm
    ports:
      - "8080:80"

  php-fpm:
    build:
      context: ./dashboard/docker/development
      dockerfile: php/php-fpm.docker
      args:
        - USER_ID
        - GROUP_ID
    volumes:
      - ./dashboard:/app
    depends_on:
      - postgres
      - redis
      - storage
      - mailer

  php-cli:
    build:
      context: ./dashboard/docker/development
      dockerfile: php/php-cli.docker
      args:
        - USER_ID
        - GROUP_ID
    volumes:
      - ./dashboard:/app
    depends_on:
      - postgres
      - redis
      - storage
      - mailer

  queue-worker:
    build:
      context: ./dashboard/docker/development
      dockerfile: php/php-cli.docker
      args:
        - USER_ID
        - GROUP_ID
    volumes:
      - ./dashboard:/app
    depends_on:
      - postgres
      - redis
      - queue-redis
      - storage
      - mailer
    command: php bin/console messenger:consume async -vv
    profiles:
      - "queue-worker"

  postgres:
    image: postgres:13.3-alpine
    volumes:
      - dashboard-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "54321:5432"

  node:
    image: node:lts-alpine3.14
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ./dashboard:/app
    working_dir: /app

  node-watch:
    image: node:lts-alpine3.14
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ./dashboard:/app
    working_dir: /app
    command: npm run watch
    profiles:
      - "watch"

  redis:
    image: redis:6.2.4-alpine3.14
    volumes:
      - dashboard-redis:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}

  queue-redis:
    image: redis:6.2.4-alpine3.14
    volumes:
      - dashboard-queue-redis:/data

  storage:
    build:
      context: ./storage/docker/development
      dockerfile: nginx/nginx.docker
    volumes:
      - ./storage:/app:ro
    ports:
      - "8081:80"

  storage-ftp:
    image: stilliard/pure-ftpd
    environment:
      FTP_USER_NAME: ${FTP_USER_NAME}
      FTP_USER_PASS: ${FTP_USER_PASS}
      FTP_USER_HOME: /app
    volumes:
      - ./storage/public:/app

  mailer:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8082:8025"

volumes:
  dashboard-postgres:
  dashboard-redis:
  dashboard-queue-redis:
